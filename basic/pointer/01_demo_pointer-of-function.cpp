//
// Created by Frewen.Wong on 2021/2/27.
//



/**
 * 文章参考：https://weread.qq.com/web/reader/ddf32c205e2b32ddf8d0f2ek64232b60230642e92efb54c
 * 指针变量也可以声明为指向函数的起始地址，并借助该指针变量来调用函数。
 * 这种指向函数的指针变量被称为函数指针（Pointer of Function），
 * 主要是可使用同一个函数指针名称在程序运行期间动态地决定所要调用的函数。
 *
 *
 * 函数名称其实也是一个指针变量，其本身所存储的值为函数内容所在内存的起始地址。
 * 如果将函数指针指向该函数的起始地址，就可以在程序中通过函数指针来调用该函数。
 * 函数指针的声明格式如下：
 *       返回数据类型 (＊函数指针名称)(参数1数据类型，参数2数据类型，…);
 *     void (＊ptr)(void); // ptr为函数指针，而此函数本身无返回值与参数
 *     int (＊ptr)(int);   //ptr为函数指针，本身返回整数值，并接受整数参数
 *     char＊ (＊ptr)(char＊);
 *     //ptr为函数指针，本身返回字符指针，并接受字符指针作为参数
 *     注意：函数指针，函数的名称必须和指针标识符括在一起
 *
 *
 * @return
 */
int main() {
    int num1 = 10;
    char ch1[2] = "A"; //声明变量num1、ch1

    cout << "变量名称 变量值 内存地址" << endl;
    cout << "----------------------------" << endl;
    // &num1就可以获取变量num1的地址
    cout << "num1 " << "\t " << num1 << '\t' << &num1 << endl;
    // //使用&运算符打印变量num1、ch1的数值与地址
    cout << "ch1  " << "\t " << ch1 << '\t' << &ch1 << endl;


    char p[] = "12345";
//    int *a = (void *) p;

    return 0;
}